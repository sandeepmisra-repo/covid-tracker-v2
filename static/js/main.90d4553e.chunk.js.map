{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","images/image.png","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/Cards/Card/Card.js","components/Cards/Cards.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card/Card.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","console","log","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","Date","toLocaleDateString","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","CardComponent","cardTitle","cardSubtitle","Grid","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toLocaleString","Info","spacing","justify","infected","active","App","state","setState","this","image","src","alt","Cards","CountryPicker","copyright","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90d4553e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__yUOSJ\",\"infected\":\"Cards_infected__21Hif\",\"active\":\"Cards_active__2Befx\",\"recovered\":\"Cards_recovered__2Sk_4\",\"deaths\":\"Cards_deaths__qk5q1\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// export const fetchDailyData = async () => {\r\n//   try {\r\n//     const { data } = await axios.get(`${url}/daily`);\r\n\r\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n//   } catch (error) {\r\n//     return error;\r\n//   }\r\n// };\r\n\r\n// Instead of Global, it fetches the daily data for the US\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n      console.log(\"<< Daily Data  >>\",data);\r\n      return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Confrimed', 'Active', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(255, 0, 0, 0.5)','rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(148, 144, 144, 0.5)'],\r\n              data: [confirmed.value, confirmed.value - recovered.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Confrimed',\r\n            borderColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.confirmed - data.recovered),\r\n            label: 'Active',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(0, 0, 255, 0.5)',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(148, 144, 144, 0.5)',\r\n            fill: true,\r\n          },  {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5))',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n  <Grid item xs={12} md={2} component={Card} className={cx(styles.card, className)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {cardTitle}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toLocaleString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {cardSubtitle}\r\n      </Typography>\r\n    </CardContent>\r\n  </Grid>\r\n);\r\n\r\nexport default CardComponent;\r\n","import React from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n      return 'Loading...';\r\n    }\r\n  \r\n    return (\r\n      <div className={styles.container}>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\"></Typography>\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <CardComponent\r\n            className={styles.infected}\r\n            cardTitle=\"Infected\"\r\n            value={confirmed.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of confirmed cases from COVID-19.\"\r\n          />\r\n          <CardComponent\r\n            className={styles.active}\r\n            cardTitle=\"Active\"\r\n            value={confirmed.value - recovered.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of active cases from COVID-19.\"\r\n          />\r\n          <CardComponent\r\n            className={styles.recovered}\r\n            cardTitle=\"Recovered\"\r\n            value={recovered.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n          />\r\n          <CardComponent\r\n            className={styles.deaths}\r\n            cardTitle=\"Deaths\"\r\n            value={deaths.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n          />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Info;","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api/\";\n\nimport image from \"./images/image.png\";\n\nimport { Cards, Chart, CountryPicker } from \"./components\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n\n  handleCountryChange = async country => {\n    const data = await fetchData(country);\n    this.setState({ data, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n        <h5 className={styles.copyright}>\n          <p>© 2020 All Rights Reserved | Terms and Conditions</p>\n          <p>Made by 💖 Sandeep Kumar Misra 💖</p>\n        </h5>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__DkDQr\",\"image\":\"App_image__3a01i\",\"shake\":\"App_shake__2mocQ\",\"copyright\":\"App_copyright__2VLct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__-Rnod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1G9lG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1BvPE\"};"],"sourceRoot":""}